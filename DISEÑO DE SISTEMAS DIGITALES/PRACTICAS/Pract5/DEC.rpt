
     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp VHDL Synthesis Compiler: Version 6.3 IR 35
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  DEC.vhd
Options:    -m -yu -e10 -w100 -o2 -ygs -fP -v10 -dc22v10 -ppalce22v10-25pc/pi -b DEC.vhd -u DED.hie
======================================================================

vhdlfe V6.3 IR 35:  VHDL parser
Fri Dec 10 13:17:40 2021

Library 'work' => directory 'lc22v10'
Linking 'C:\Archivos de programa\Cypress\Warp\bin\std.vhd'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\common\cypress.vhd'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\common\work\cypress.vif'.
Library 'ieee' => directory 'C:\Archivos de programa\Cypress\Warp\lib\ieee\work'
Linking 'C:\Archivos de programa\Cypress\Warp\lib\ieee\work\stdlogic.vif'.

vhdlfe:  No errors.


tovif V6.3 IR 35:  High-level synthesis
Fri Dec 10 13:17:41 2021

Linking 'C:\Archivos de programa\Cypress\Warp\bin\std.vhd'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\common\cypress.vhd'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\common\work\cypress.vif'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\ieee\work\stdlogic.vif'.

tovif:  No errors.


topld V6.3 IR 35:  Synthesis and optimization
Fri Dec 10 13:17:41 2021

Linking 'C:\Archivos de programa\Cypress\Warp\bin\std.vhd'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\common\cypress.vhd'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\common\work\cypress.vif'.
Linking 'C:\Archivos de programa\Cypress\Warp\lib\ieee\work\stdlogic.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------



------------------------------------------------------
Alias Detection
------------------------------------------------------

------------------------------------------------------
Aliased 0 equations, 12 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 10.
----------------------------------------------------------
Created 36 PLD nodes.

topld:  No errors.

----------------------------------------------------------------------------
PLD Optimizer Software:       DSGNOPT.EXE    31/03/2000  [v4.02 ] 6.3 IR 35

DESIGN HEADER INFORMATION  (13:17:42)

Input File(s): DEC.pla
Device       : C22V10
Package      : palce22v10-25pc/pi
ReportFile   : DEC.rpt

Program Controls:
    COMMAND LANGUAGE_VHDL 
    COMMAND PROPERTY BUS_HOLD ENABLE 

Signal Requests:
    GROUP USEPOL ALL
    GROUP FAST_SLEW ALL

Completed Successfully  
----------------------------------------------------------------------------
PLD Optimizer Software:       DSGNOPT.EXE    31/03/2000  [v4.02 ] 6.3 IR 35

OPTIMIZATION OPTIONS       (13:17:42)

Messages:
  Information: Process virtual '\display(0)D\'\display(0)D\ ... expanded.
  Information: Process virtual '\display(1)D\'\display(1)D\ ... expanded.
  Information: Process virtual '\display(2)D\'\display(2)D\ ... expanded.
  Information: Process virtual '\display(3)D\'\display(3)D\ ... expanded.
  Information: Process virtual '\display(4)D\'\display(4)D\ ... expanded.
  Information: Process virtual '\display(5)D\'\display(5)D\ ... expanded.
  Information: Process virtual '\display(6)D\'\display(6)D\ ... expanded.
  Information: Optimizing logic using best output polarity for signals:
         display(0).D display(1).D display(2).D display(3).D display(4).D
         display(5).D display(6).D

  Information: Selected logic optimization OFF for signals:
         display(0).AP display(0).C display(1).AP display(1).C display(2).AP
         display(2).C display(3).AP display(3).C display(4).AP display(4).C
         display(5).AP display(5).C display(6).AP display(6).C



Summary:
                 Error Count = 0      Warning Count = 0

Completed Successfully  
----------------------------------------------------------------------------
PLD Optimizer Software:       MINOPT.EXE     01/NOV/1999  [v4.02 ] 6.3 IR 35

LOGIC MINIMIZATION         ()

Messages:


Summary:
                 Error Count = 0      Warning Count = 0

Completed Successfully
----------------------------------------------------------------------------
PLD Optimizer Software:       DSGNOPT.EXE    31/03/2000  [v4.02 ] 6.3 IR 35

OPTIMIZATION OPTIONS       (13:17:42)

Messages:
  Information: Optimizing Banked Preset/Reset requirements.
  Information: Selecting D register equation as minimal for signal display(0)
  Information: Inverting Preset/Reset & output logic polarity for display(1).
  Information: Selecting D register equation as minimal for signal display(1)
  Information: Inverting Preset/Reset & output logic polarity for display(2).
  Information: Selecting D register equation as minimal for signal display(2)
  Information: Inverting Preset/Reset & output logic polarity for display(3).
  Information: Selecting D register equation as minimal for signal display(3)
  Information: Inverting Preset/Reset & output logic polarity for display(4).
  Information: Selecting D register equation as minimal for signal display(4)
  Information: Inverting Preset/Reset & output logic polarity for display(5).
  Information: Selecting D register equation as minimal for signal display(5)
  Information: Inverting Preset/Reset & output logic polarity for display(6).
  Information: Selecting D register equation as minimal for signal display(6)
  Information: Optimizing logic without changing polarity for signals:
         display(0).D display(1).D display(2).D display(3).D display(4).D
         display(5).D display(6).D

  Information: Selected logic optimization OFF for signals:
         display(0).AR display(0).SP display(0).C display(1).AR display(1).SP
         display(1).C display(2).AR display(2).SP display(2).C display(3).AR
         display(3).SP display(3).C display(4).AR display(4).SP display(4).C
         display(5).AR display(5).SP display(5).C display(6).AR display(6).SP
         display(6).C



Summary:
                 Error Count = 0      Warning Count = 0

Completed Successfully  
----------------------------------------------------------------------------
PLD Optimizer Software:       MINOPT.EXE     01/NOV/1999  [v4.02 ] 6.3 IR 35

LOGIC MINIMIZATION         ()

Messages:


Summary:
                 Error Count = 0      Warning Count = 0

Completed Successfully
----------------------------------------------------------------------------
PLD Optimizer Software:       DSGNOPT.EXE    31/03/2000  [v4.02 ] 6.3 IR 35

OPTIMIZATION OPTIONS       (13:17:42)

Messages:


Summary:
                 Error Count = 0      Warning Count = 0

Completed Successfully  
----------------------------------------------------------------------------
PLD Compiler Software:        PLA2JED.EXE    31/03/2000  [v4.02 ] 6.3 IR 35

<CYPRESSTAG name="Equations" icon=FILE_RPT_EQUATION>
DESIGN EQUATIONS           (13:17:42)
</CYPRESSTAG>

    /display(0).D =
          ctr(0) * /ctr(1) * display(0).Q * display(1).Q * display(2).Q * 
          display(3).Q * /display(4).Q * /display(5).Q * display(6).Q 
        + ctr(0) * /display(0).Q * /display(1).Q * display(2).Q * 
          display(3).Q * /display(4).Q * /display(5).Q * display(6).Q 
        + ctr(0) * /display(0).Q * display(1).Q * /display(2).Q * 
          /display(3).Q * display(4).Q * /display(5).Q * /display(6).Q 
        + /ctr(0) * ctr(1) * /display(1).Q * /display(2).Q * /display(3).Q * 
          /display(4).Q * /display(5).Q * /display(6).Q 
        + ctr(1) * /display(0).Q * /display(1).Q * display(2).Q * 
          display(3).Q * /display(4).Q * /display(5).Q 
        + ctr(1) * /display(0).Q * /display(1).Q * /display(3).Q * 
          /display(4).Q * display(5).Q * /display(6).Q 
        + ctr(0) * /display(0).Q * /display(1).Q * /display(3).Q * 
          /display(4).Q * display(5).Q * /display(6).Q 
        + ctr(0) * /display(0).Q * /display(1).Q * /display(2).Q * 
          /display(3).Q * /display(4).Q * /display(6).Q 
        + ctr(1) * /display(0).Q * display(1).Q * display(2).Q * 
          /display(4).Q * /display(5).Q * /display(6).Q 
        + ctr(0) * /display(0).Q * display(1).Q * display(2).Q * 
          /display(4).Q * /display(5).Q * /display(6).Q 
        + /ctr(0) * /ctr(1) * /s(1) * /s(2) * s(3) 
        + /ctr(0) * /ctr(1) * s(2) * /s(3) 
        + /ctr(0) * /ctr(1) * s(1) * /s(3) 
        + ctr(0) * ctr(1) * /display(0).Q 

    display(0).AR =
          /clr 

    display(0).SP =
          GND

    display(0).C =
          clk 

    /display(1).D =
          ctr(0) * /ctr(1) * display(0).Q * display(1).Q * /display(2).Q 
        + /ctr(0) * ctr(1) * display(1).Q * /display(2).Q * /display(4).Q 
        + ctr(0) * /ctr(1) * /display(0).Q * /display(4).Q * /display(5).Q 
        + /ctr(0) * /ctr(1) * /s(1) * /s(2) * s(3) 
        + /ctr(0) * /ctr(1) * /s(0) * s(2) * /s(3) 
        + /ctr(0) * /ctr(1) * /s(1) * s(2) * /s(3) 
        + /ctr(0) * /ctr(1) * /s(0) * /s(1) * /s(3) 
        + /ctr(0) * ctr(1) * display(2).Q * display(4).Q 
        + /ctr(0) * ctr(1) * display(1).Q * display(6).Q 
        + ctr(0) * /ctr(1) * display(4).Q * display(6).Q 
        + ctr(0) * /ctr(1) * display(1).Q * display(5).Q 
        + ctr(0) * display(0).Q * /display(1).Q * display(5).Q 
        + ctr(1) * /display(1).Q * /display(2).Q * display(6).Q 
        + ctr(0) * /ctr(1) * display(2).Q * /display(3).Q 
        + ctr(1) * /display(1).Q * display(2).Q * /display(3).Q 
        + /ctr(0) * ctr(1) * display(3).Q * /display(6).Q 
        + ctr(0) * /ctr(1) * display(3).Q * /display(6).Q 
        + /ctr(0) * ctr(1) * display(5).Q 
        + /ctr(0) * ctr(1) * display(0).Q 
        + ctr(1) * /display(1).Q * display(4).Q 
        + ctr(0) * /display(1).Q * display(6).Q 
        + ctr(0) * /display(1).Q * display(4).Q 
        + ctr(0) * ctr(1) * /display(1).Q 

    display(1).AR =
          /clr 

    display(1).SP =
          GND

    display(1).C =
          clk 

    /display(2).D =
          ctr(0) * /ctr(1) * /display(1).Q * display(2).Q * /display(3).Q 
        + /ctr(0) * ctr(1) * display(2).Q * /display(3).Q * /display(5).Q 
        + /ctr(0) * /ctr(1) * /s(0) * /s(1) * /s(2) 
        + /ctr(0) * /ctr(1) * /s(0) * s(1) * /s(3) 
        + /ctr(0) * ctr(1) * display(5).Q * display(6).Q 
        + /ctr(0) * ctr(1) * display(4).Q * display(6).Q 
        + /ctr(0) * ctr(1) * display(4).Q * display(5).Q 
        + /ctr(0) * ctr(1) * display(0).Q * display(6).Q 
        + /ctr(0) * ctr(1) * display(0).Q * display(5).Q 
        + ctr(0) * /ctr(1) * display(2).Q * display(5).Q 
        + ctr(0) * /ctr(1) * display(2).Q * display(4).Q 
        + ctr(0) * /ctr(1) * display(1).Q * display(6).Q 
        + ctr(0) * /ctr(1) * display(0).Q * display(2).Q 
        + ctr(1) * display(0).Q * /display(2).Q * display(4).Q 
        + ctr(0) * /display(2).Q * display(4).Q * display(5).Q 
        + ctr(0) * display(0).Q * /display(2).Q * display(5).Q 
        + ctr(0) * display(0).Q * /display(2).Q * display(4).Q 
        + ctr(1) * /display(1).Q * /display(2).Q * display(4).Q 
        + ctr(0) * /display(1).Q * /display(2).Q * display(4).Q 
        + /ctr(0) * ctr(1) * display(1).Q * /display(4).Q 
        + ctr(0) * display(1).Q * /display(2).Q * /display(4).Q 
        + /ctr(0) * ctr(1) * display(3).Q * /display(6).Q 
        + ctr(0) * /ctr(1) * display(3).Q * /display(6).Q 
        + ctr(1) * /display(2).Q * display(6).Q 
        + ctr(0) * /display(2).Q * display(6).Q 
        + ctr(0) * ctr(1) * /display(2).Q 

    display(2).AR =
          /clr 

    display(2).SP =
          GND

    display(2).C =
          clk 

    /display(3).D =
          /ctr(0) * /ctr(1) * s(0) * /s(1) * s(2) * /s(3) 
        + /ctr(0) * /ctr(1) * /s(0) * /s(1) * /s(2) 
        + /ctr(0) * /ctr(1) * /s(0) * s(1) * /s(3) 
        + /ctr(0) * /ctr(1) * s(1) * /s(2) * /s(3) 
        + ctr(1) * /display(3).Q * display(4).Q * display(5).Q 
        + ctr(1) * display(0).Q * /display(3).Q * display(5).Q 
        + ctr(1) * display(0).Q * /display(3).Q * display(4).Q 
        + ctr(0) * display(1).Q * /display(3).Q * display(5).Q 
        + ctr(0) * display(0).Q * /display(3).Q * display(5).Q 
        + ctr(0) * display(0).Q * display(2).Q * /display(3).Q 
        + ctr(1) * /display(1).Q * /display(3).Q * display(4).Q 
        + ctr(0) * /display(1).Q * display(2).Q * /display(3).Q 
        + ctr(1) * /display(2).Q * /display(3).Q * display(5).Q 
        + ctr(0) * display(1).Q * /display(2).Q * /display(3).Q 
        + ctr(1) * display(1).Q * /display(3).Q * /display(4).Q 
        + ctr(1) * display(2).Q * /display(3).Q * /display(5).Q 
        + /ctr(0) * ctr(1) * display(3).Q 
        + ctr(0) * /ctr(1) * display(3).Q 
        + ctr(1) * /display(3).Q * display(6).Q 
        + ctr(0) * /display(3).Q * display(6).Q 
        + ctr(0) * /display(3).Q * display(4).Q 
        + ctr(0) * ctr(1) * /display(3).Q 

    display(3).AR =
          /clr 

    display(3).SP =
          GND

    display(3).C =
          clk 

    /display(4).D =
          /ctr(0) * /ctr(1) * /s(1) * /s(2) 
        + /ctr(0) * /ctr(1) * s(2) * /s(3) 
        + /ctr(0) * /ctr(1) * s(0) * /s(3) 
        + /ctr(0) * ctr(1) * display(4).Q 
        + ctr(0) * /ctr(1) * display(4).Q 
        + ctr(1) * /display(4).Q * display(6).Q 
        + ctr(1) * /display(4).Q * display(5).Q 
        + ctr(1) * display(3).Q * /display(4).Q 
        + ctr(1) * display(0).Q * /display(4).Q 
        + ctr(0) * /display(4).Q * display(5).Q 
        + ctr(0) * /display(0).Q * /display(4).Q 
        + ctr(1) * /display(1).Q * /display(4).Q 
        + ctr(0) * /display(1).Q * /display(4).Q 
        + ctr(1) * /display(2).Q * /display(4).Q 
        + ctr(0) * /display(2).Q * /display(4).Q 
        + ctr(0) * /display(3).Q * /display(4).Q 
        + ctr(0) * /display(4).Q * /display(6).Q 

    display(4).AR =
          /clr 

    display(4).SP =
          GND

    display(4).C =
          clk 

    /display(5).D =
          /ctr(0) * /ctr(1) * s(0) * s(1) * /s(3) 
        + /ctr(0) * /ctr(1) * /s(0) * /s(1) * /s(3) 
        + /ctr(0) * ctr(1) * display(3).Q * display(5).Q 
        + ctr(0) * /ctr(1) * display(5).Q * display(6).Q 
        + /ctr(0) * ctr(1) * display(1).Q * /display(2).Q 
        + /ctr(0) * ctr(1) * display(2).Q * /display(3).Q 
        + ctr(0) * /ctr(1) * display(3).Q * /display(6).Q 
        + /ctr(0) * /ctr(1) * /s(1) * /s(2) 
        + /ctr(0) * /ctr(1) * /s(2) * /s(3) 
        + /ctr(0) * ctr(1) * display(6).Q 
        + /ctr(0) * ctr(1) * display(4).Q 
        + /ctr(0) * ctr(1) * display(0).Q 
        + ctr(0) * /ctr(1) * display(4).Q 
        + ctr(0) * /ctr(1) * display(1).Q 
        + ctr(0) * /ctr(1) * display(0).Q 
        + ctr(0) * /ctr(1) * /display(2).Q 
        + ctr(0) * display(1).Q * /display(5).Q 
        + ctr(1) * /display(1).Q * /display(5).Q 
        + ctr(0) * /display(3).Q * /display(5).Q 

    display(5).AR =
          /clr 

    display(5).SP =
          GND

    display(5).C =
          clk 

    /display(6).D =
          /ctr(0) * /ctr(1) * /s(1) * /s(2) * s(3) 
        + /ctr(0) * /ctr(1) * s(0) * s(2) * /s(3) 
        + /ctr(0) * /ctr(1) * /s(0) * /s(2) * /s(3) 
        + ctr(1) * display(4).Q * display(5).Q * /display(6).Q 
        + ctr(0) * display(0).Q * display(1).Q * /display(6).Q 
        + ctr(0) * /display(1).Q * display(2).Q * /display(6).Q 
        + ctr(0) * /display(0).Q * /display(2).Q * /display(6).Q 
        + ctr(1) * /display(1).Q * /display(2).Q * /display(6).Q 
        + ctr(1) * display(1).Q * /display(4).Q * /display(6).Q 
        + ctr(1) * display(2).Q * /display(5).Q * /display(6).Q 
        + /ctr(0) * /ctr(1) * s(1) * /s(3) 
        + /ctr(0) * ctr(1) * display(6).Q 
        + ctr(0) * /ctr(1) * display(6).Q 
        + ctr(1) * display(3).Q * /display(6).Q 
        + ctr(1) * display(0).Q * /display(6).Q 
        + ctr(0) * display(5).Q * /display(6).Q 
        + ctr(0) * display(4).Q * /display(6).Q 
        + ctr(0) * display(3).Q * /display(6).Q 

    display(6).AR =
          /clr 

    display(6).SP =
          GND

    display(6).C =
          clk 


Completed Successfully  
----------------------------------------------------------------------------
PLD Compiler Software:        PLA2JED.EXE    31/03/2000  [v4.02 ] 6.3 IR 35

DESIGN RULE CHECK          (13:17:42)

Messages:
  Error: Logic equation has too many product terms on signal display(6).D.
         Found = 18  ,  Maximum = 16
  Error: Logic equation has too many product terms on signal display(5).D.
         Found = 19  ,  Maximum = 16
  Error: Logic equation has too many product terms on signal display(4).D.
         Found = 17  ,  Maximum = 16
  Error: Logic equation has too many product terms on signal display(3).D.
         Found = 22  ,  Maximum = 16
  Error: Logic equation has too many product terms on signal display(2).D.
         Found = 26  ,  Maximum = 16
  Error: Logic equation has too many product terms on signal display(1).D.
         Found = 23  ,  Maximum = 16


Summary:
                 Error Count = 6      Warning Count = 0

Errors Detected.
